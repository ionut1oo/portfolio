{"ast":null,"code":"var _jsxFileName = \"D:\\\\spatiu de lucru\\\\Portofolio\\\\my-portfolio\\\\src\\\\components\\\\Contact.tsx\",\n  _s = $RefreshSig$();\n// Contact.tsx\n\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Form, Container } from 'react-bootstrap';\nimport { updateField, resetForm } from '../features/contactSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Contact = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    name,\n    email,\n    message\n  } = useSelector(state => state.contact);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    dispatch(updateField({\n      field: name,\n      value\n    }));\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Implement your submit logic here\n    // For now, reset the form\n    dispatch(resetForm());\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Contact Me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formName\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter your name\",\n          name: \"name\",\n          value: name,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(Contact, \"ZOlUVWV+kIXbte2j/9MKMS/H1Oc=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Contact;\nexport default Contact;\nvar _c;\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"names":["React","useDispatch","useSelector","Form","Container","updateField","resetForm","jsxDEV","_jsxDEV","Contact","_s","dispatch","name","email","message","state","contact","handleChange","e","value","target","field","handleSubmit","preventDefault","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Group","controlId","Label","Control","type","placeholder","onChange","_c","$RefreshReg$"],"sources":["D:/spatiu de lucru/Portofolio/my-portfolio/src/components/Contact.tsx"],"sourcesContent":["// Contact.tsx\r\n\r\nimport React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Form, Button, Container, Alert } from 'react-bootstrap';\r\nimport { updateField, resetForm } from '../features/contactSlice';\r\nimport { RootState } from './store';\r\n\r\nconst Contact: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const { name, email, message } = useSelector((state: RootState) => state.contact);\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n    const { name, value } = e.target;\r\n    dispatch(updateField({ field: name, value }));\r\n  };\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    // Implement your submit logic here\r\n    // For now, reset the form\r\n    dispatch(resetForm());\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <h1>Contact Me</h1>\r\n      {/* ... */}\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group controlId=\"formName\">\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter your name\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Group>\r\n        {/* ... */}\r\n      </Form>\r\n      {/* ... */}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,IAAI,EAAUC,SAAS,QAAe,iBAAiB;AAChE,SAASC,WAAW,EAAEC,SAAS,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGlE,MAAMC,OAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAMC,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEW,IAAI;IAAEC,KAAK;IAAEC;EAAQ,CAAC,GAAGZ,WAAW,CAAEa,KAAgB,IAAKA,KAAK,CAACC,OAAO,CAAC;EAEjF,MAAMC,YAAY,GAAIC,CAA4D,IAAK;IACrF,MAAM;MAAEN,IAAI;MAAEO;IAAM,CAAC,GAAGD,CAAC,CAACE,MAAM;IAChCT,QAAQ,CAACN,WAAW,CAAC;MAAEgB,KAAK,EAAET,IAAI;MAAEO;IAAM,CAAC,CAAC,CAAC;EAC/C,CAAC;EAED,MAAMG,YAAY,GAAIJ,CAAkB,IAAK;IAC3CA,CAAC,CAACK,cAAc,CAAC,CAAC;IAClB;IACA;IACAZ,QAAQ,CAACL,SAAS,CAAC,CAAC,CAAC;EACvB,CAAC;EAED,oBACEE,OAAA,CAACJ,SAAS;IAAAoB,QAAA,gBACRhB,OAAA;MAAAgB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEnBpB,OAAA,CAACL,IAAI;MAAC0B,QAAQ,EAAEP,YAAa;MAAAE,QAAA,eAC3BhB,OAAA,CAACL,IAAI,CAAC2B,KAAK;QAACC,SAAS,EAAC,UAAU;QAAAP,QAAA,gBAC9BhB,OAAA,CAACL,IAAI,CAAC6B,KAAK;UAAAR,QAAA,EAAC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eAC7BpB,OAAA,CAACL,IAAI,CAAC8B,OAAO;UACXC,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,iBAAiB;UAC7BvB,IAAI,EAAC,MAAM;UACXO,KAAK,EAAEP,IAAK;UACZwB,QAAQ,EAAEnB;QAAa;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAET,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEE,CAAC;AAEhB,CAAC;AAAClB,EAAA,CApCID,OAAiB;EAAA,QACJR,WAAW,EACKC,WAAW;AAAA;AAAAmC,EAAA,GAFxC5B,OAAiB;AAsCvB,eAAeA,OAAO;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}