{"ast":null,"code":"var _jsxFileName = \"D:\\\\spatiu de lucru\\\\Portofolio\\\\my-portfolio\\\\src\\\\components\\\\Contact.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateField, resetForm } from '../features/contactSlice';\n// Replace with your actual RootState\nimport { Button, Container, Alert } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Contact = () => {\n  _s();\n  const dispatch = useDispatch();\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(false);\n  const formData = useSelector(state => state.contact); // Replace 'state.contact' based on your actual state structure\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    dispatch(updateField({\n      field: name,\n      value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('https://sheltered-forest-33596.herokuapp.com/api/sendEmail', formData, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.status >= 200 && response.status < 300 && response.data === 'Email sent') {\n        setSuccess(true);\n        setError(null);\n        console.log('Email successfully sent');\n        dispatch(resetForm());\n      } else {\n        setError('There was an error sending the email');\n        setSuccess(false);\n        console.error(`Received status code ${response.status}`);\n      }\n    } catch (error) {\n      setError('There was an error sending the email');\n      setSuccess(false);\n      console.error('There was an error sending the email', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center text-primary\",\n      children: \"Contact Me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this), success && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"success\",\n      children: \"Email successfully sent!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          name: \"name\",\n          placeholder: \"Name\",\n          className: \"mb-2 mt-5\",\n          value: formData.name,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          name: \"email\",\n          placeholder: \"Email\",\n          className: \"mb-2\",\n          value: formData.email,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"message\",\n          name: \"message\",\n          placeholder: \"Message\",\n          value: formData.message,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        children: \"Send Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(Contact, \"1wYjnn36j7vV4lF0yusQBpcTFGE=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Contact;\nexport default Contact;\nvar _c;\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"names":["React","useState","axios","useDispatch","useSelector","updateField","resetForm","Button","Container","Alert","jsxDEV","_jsxDEV","Contact","_s","dispatch","error","setError","success","setSuccess","formData","state","contact","handleInputChange","e","name","value","target","field","handleSubmit","preventDefault","response","post","headers","status","data","console","log","children","className","fileName","_jsxFileName","lineNumber","columnNumber","variant","onSubmit","type","id","placeholder","onChange","email","message","_c","$RefreshReg$"],"sources":["D:/spatiu de lucru/Portofolio/my-portfolio/src/components/Contact.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { updateField, resetForm, ContactState } from '../features/contactSlice';\r\nimport { RootState } from '../app/store';  // Replace with your actual RootState\r\nimport { Button, Container, Alert } from 'react-bootstrap';\r\n\r\nconst Contact: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [success, setSuccess] = useState<boolean>(false);\r\n\r\n  const formData = useSelector((state: RootState) => state.contact);  // Replace 'state.contact' based on your actual state structure\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n    const { name, value } = e.target;\r\n    dispatch(updateField({ field: name as keyof ContactState, value }));\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post('https://sheltered-forest-33596.herokuapp.com/api/sendEmail', formData, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n      if (response.status >= 200 && response.status < 300 && response.data === 'Email sent') {\r\n        setSuccess(true);\r\n        setError(null);\r\n        console.log('Email successfully sent');\r\n        dispatch(resetForm());\r\n      } else {\r\n        setError('There was an error sending the email');\r\n        setSuccess(false);\r\n        console.error(`Received status code ${response.status}`);\r\n      }\r\n    } catch (error) {\r\n      setError('There was an error sending the email');\r\n      setSuccess(false);\r\n      console.error('There was an error sending the email', error);\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <Container>\r\n      <h1 className='text-center text-primary'>Contact Me</h1>\r\n      {error && <Alert variant=\"danger\">{error}</Alert>}\r\n      {success && <Alert variant=\"success\">Email successfully sent!</Alert>}\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <input \r\n            type=\"text\" \r\n            id=\"name\" \r\n            name=\"name\"\r\n            placeholder='Name' \r\n            className='mb-2 mt-5'\r\n            value={formData.name} \r\n            onChange={handleInputChange} \r\n          />\r\n        </div>\r\n        <div>\r\n          <input \r\n            type=\"email\" \r\n            id=\"email\" \r\n            name=\"email\"\r\n            placeholder='Email' \r\n            className='mb-2'\r\n            value={formData.email} \r\n            onChange={handleInputChange} \r\n          />\r\n        </div>\r\n        <div>\r\n          <textarea \r\n            id=\"message\" \r\n            name=\"message\" \r\n            placeholder='Message'\r\n            value={formData.message} \r\n            onChange={handleInputChange} \r\n          ></textarea>\r\n        </div>\r\n        <Button variant='primary' type=\"submit\">Send Message</Button>\r\n      </form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}